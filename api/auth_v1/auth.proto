syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";

option go_package = "github.com/Timofey335/auth/pkg/auth_v1;auth_v1";

service Auth_v1 {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

enum Role {
    UNKNOWN = 0;
    USER = 1;
    ADMIN = 2; 
}

message CreateUserRequest {
    string name = 1 [(validate.rules).string = {min_len: 2, max_len: 50}];
    string email = 2 [(validate.rules).string.email = true];
    string password = 3 [(validate.rules).string = {min_len: 8, max_len: 50}]; 
    string password_confirm = 4 [(validate.rules).string = {min_len: 8, max_len: 50}];
    Role role = 5;
}

message CreateUserResponse {
    int64 id = 1;
}

message GetUserRequest {
    int64 id = 1;
}

message GetUserResponse {
    int64 id = 1;
    string name = 2;
    string email = 3;
    Role role = 4; 
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message UpdateUserRequest {
    int64 id = 1;
    google.protobuf.StringValue name = 2 [(validate.rules).string = {min_len: 2, max_len: 50}];
    google.protobuf.StringValue password = 3 [(validate.rules).string = {min_len: 8, max_len: 50}];
    google.protobuf.StringValue password_confirm = 4 [(validate.rules).string = {min_len: 8, max_len: 50}];
    optional Role role = 5;
}

message DeleteUserRequest {
    int64 id = 1;
}